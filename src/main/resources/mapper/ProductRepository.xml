<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.childprj.repository.ProductRepository">

    <resultMap id="mapUser" type="com.project.childprj.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_loginId" property="loginId"/>
        <result column="u_password" property="password"/>
        <result column="u_name" property="name"/>
        <result column="u_nickName" property="nickname"/>
        <result column="u_email" property="email"/>
        <result column="u_createDate" property="createDate"/>
    </resultMap>

    <resultMap id="mapProduct" type="com.project.childprj.domain.Product">
        <result column="p_id" property="id"/>
        <result column="p_productName" property="productName"/>
        <result column="p_region" property="region"/>
        <result column="p_price" property="price"/>
        <result column="p_content" property="content"/>
        <result column="p_viewCnt" property="viewCnt"/>
        <result column="p_createDate" property="createDate"/>
        <collection resultMap="mapUser" property="user"/>
    </resultMap>

    <!-- 특정 글 -->
    <sql id="SELECT_BASE">
        SELECT p.id          "p_id"
             , p.productName "p_productName"
             , p.region      "p_region"
             , p.price       "p_price"
             , p.content     "p_content"
             , p.viewCnt     "p_viewCnt"
             , p.createDate  "p_createDate"
             , u.id          "u_id"
             , u.loginId     "u_loginId"
             , u.password    "u_password"
             , u.name        "u_name"
             , u.nickName    "u_nickName"
             , u.email       "u_email"
             , u.createDate  "u_createDate"
          FROM product p
             , user u
         WHERE p.userId = u.id
    </sql>

    <select id="selectFromCntOrderByDate" resultMap="mapProduct">
        <include refid="SELECT_BASE"/>
          AND (p.productName LIKE concat('%', #{sq}, '%')
           OR p.region LIKE concat('%', #{sq}, '%'))
        ORDER BY p.createDate DESC
        LIMIT #{from}, #{cnts}
    </select>

    <select id="selectFromCntOrderByPrice" resultMap="mapProduct">
        <include refid="SELECT_BASE"/>
          AND (p.productName LIKE concat('%', #{sq}, '%')
           OR p.region LIKE concat('%', #{sq}, '%'))
        ORDER BY p.price
        LIMIT #{from}, #{cnts}
    </select>

    <select id="selectCountAll" resultType="int">
        SELECT Count(*)
          FROM product
         WHERE productName LIKE concat('%', #{sq}, '%')
            OR region LIKE concat('%', #{sq}, '%')
    </select>

    <insert id="insert" flushCache="true" parameterType="com.project.childprj.domain.Product"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO product(productName, region, price, content, userId)
        VALUES (#{productName}, #{region}, #{price}, #{content}, #{user.id})
    </insert>

    <select id="findProductById" resultMap="mapProduct">
        <include refid="SELECT_BASE"/>
        AND p.id = #{id}
    </select>

    <update id="incViewCnt" flushCache="true">
        UPDATE product
           SET viewCnt = viewCnt + 1
         WHERE id = #{id}
    </update>

    <delete id="detailDelete" flushCache="true">
        DELETE
          FROM product
         WHERE id = #{id}
    </delete>

    <update id="update" flushCache="true" parameterType="com.project.childprj.domain.Product">
        UPDATE product
           SET price       = #{price}
             , productName = #{productName}
             , region      = #{region}
             , content     = #{content}
         WHERE id = #{id}
    </update>

    <!--home 추천순 5-->
    <select id="selectFive" resultMap="mapProduct">
        <include refid="SELECT_BASE"/>
        ORDER BY viewCnt DESC
        LIMIT 5
    </select>

</mapper>
